// <auto-generated />
using System;
using DotnetCards.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotnetCards.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211207200745_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotnetCards.Core.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentPostID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ParentPostID");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2021, 12, 7, 23, 7, 45, 524, DateTimeKind.Local).AddTicks(5826),
                            IsDeleted = false,
                            Title = "Post1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2021, 12, 7, 23, 7, 45, 525, DateTimeKind.Local).AddTicks(7650),
                            IsDeleted = false,
                            Title = "Post2"
                        });
                });

            modelBuilder.Entity("DotnetCards.Core.Models.PostDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<string>("PostText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostID");

                    b.ToTable("PostDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostID = 1,
                            PostText = "Post Detail 1"
                        },
                        new
                        {
                            Id = 2,
                            PostID = 2,
                            PostText = "Post Detail 2"
                        });
                });

            modelBuilder.Entity("DotnetCards.Core.Models.Post", b =>
                {
                    b.HasOne("DotnetCards.Core.Models.Post", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentPostID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DotnetCards.Core.Models.PostDetail", b =>
                {
                    b.HasOne("DotnetCards.Core.Models.Post", "Post")
                        .WithMany("PostDetails")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("DotnetCards.Core.Models.Post", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("PostDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
